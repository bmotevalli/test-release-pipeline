name: Release - Tag Based

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type (patch/minor/major)'
        required: true
        default: 'patch'
    branches:
      - master
      - release/*

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0 # Important for getting all tags and branches

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install bump2version
        run: pip install bump2version

      - name: Set up Git identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Check branch for patch release
        id: check_branch
        if: ${{ github.event.inputs.releaseType == 'patch' }}
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          echo "Current branch: $BRANCH_NAME"
          if [[ $BRANCH_NAME == release* ]]; then
            echo "Valid branch for patch release."
          else
            echo "::error::Patch releases are only allowed on branches prefixed with 'release'."
            exit 1
          fi

      - name: Bump version
        id: bump_version
        run: |
          bump2version ${{ github.event.inputs.releaseType }} --config-file ./setup.cfg
          NEW_VERSION=$(grep 'current_version = ' ./setup.cfg | sed -r 's/current_version = //')
          echo "New version: $NEW_VERSION"
          echo "::set-output name=version::$NEW_VERSION"

      - name: Push the tags and changes
        run: |
          git push origin --tags
          git push

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Versioned Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: benmotevalli/test-release-pipeline-prod:${{ steps.bump_version.outputs.version }}